{
  "extends": ["airbnb-base"],
  "parser": "babel-eslint",
  "overrides": [{
    "files": ["**/*.ts"],
    "parser": "@typescript-eslint/parser",
    "plugins": ["@typescript-eslint"],
    "rules": {
      "no-unused-vars": "off",
      "@typescript-eslint/no-unused-vars": "warn",
      "no-useless-constructor": "off",
      "@typescript-eslint/no-useless-constructor": "error"
    }
  }],
  "settings": {
    // The following settings seem to be necessary in order for the import
    // plugin to work correctly with @typescript-eslint/parser.
    // https://medium.com/@myylow/how-to-keep-the-airbnb-eslint-config-when-moving-to-typescript-1abb26adb5c6
    "import/extensions": [".js", ".ts"],
    "import/parsers": {
      "@typescript-eslint/parser": [".ts"]
    },
    "import/resolver": {
      "node": {
        "extensions": [".js", ".ts"]
      }
    }
  },
  "rules": {
      "semi": ["error", "always"],
      "quotes": ["error", "single"],
      "camelcase": "off",
      "import/extensions": "off",
      "no-multiple-empty-lines": ["error", { "max": 3, "maxEOF": 1 }],
      "prefer-promise-reject-errors": "off",
      "comma-dangle": "off",
      "no-console": "off",
      "no-new-object": "error",
      "no-plusplus": "off",
      "object-shorthand": ["error", "never"],
      "no-shadow": ["error", {"allow": ["error"]}],
      "no-use-before-define": [2, {"functions": false, "classes": true}],
      "prefer-template": "off",
      "prefer-destructuring": "off",
      "object-curly-spacing": "off",
      "dot-notation": "off",
      "lines-between-class-members": "off",
      "no-param-reassign": "off",
      "no-await-in-loop": "off",
      "no-restricted-globals": "off",
      "no-underscore-dangle": "off",
      "operator-linebreak": ["error", "after"],
      "no-constant-condition": ["error", { "checkLoops": false }],
      "no-restricted-syntax": ["error", {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      }, {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      }, {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }]
  }
}
